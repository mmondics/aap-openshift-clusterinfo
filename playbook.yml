---
- name: Gather OpenShift cluster information
  hosts: localhost
  gather_facts: false
  collections: [kubernetes.core]

  vars:
    # provide these via Inventory vars or Extra Vars
    # k8s_host: "https://api.ocpvirt.cpolab.ibm.com:6443"
    # k8s_user: "myuser"
    # k8s_pass: "mypassword"
    validate_certs: false
    save_artifacts: false   # set true to write JSON files

  tasks:
    # --- Core queries ---
    - name: Get OpenShift ClusterVersion
      kubernetes.core.k8s_info:
        host: "{{ k8s_host }}"
        username: "{{ k8s_user }}"
        password: "{{ k8s_pass }}"
        validate_certs: "{{ validate_certs }}"
        api_version: config.openshift.io/v1
        kind: ClusterVersion
        name: version
      register: ocp_cv

    - name: Get Infrastructure (platform & region)
      kubernetes.core.k8s_info:
        host: "{{ k8s_host }}"
        username: "{{ k8s_user }}"
        password: "{{ k8s_pass }}"
        validate_certs: "{{ validate_certs }}"
        api_version: config.openshift.io/v1
        kind: Infrastructure
        name: cluster
      register: infra

    - name: Get ClusterOperators
      kubernetes.core.k8s_info:
        host: "{{ k8s_host }}"
        username: "{{ k8s_user }}"
        password: "{{ k8s_pass }}"
        validate_certs: "{{ validate_certs }}"
        api_version: config.openshift.io/v1
        kind: ClusterOperator
      register: operators

    - name: Get Nodes
      kubernetes.core.k8s_info:
        host: "{{ k8s_host }}"
        username: "{{ k8s_user }}"
        password: "{{ k8s_pass }}"
        validate_certs: "{{ validate_certs }}"
        api_version: v1
        kind: Node
      register: nodes

    - name: Get Projects (namespaces)
      kubernetes.core.k8s_info:
        host: "{{ k8s_host }}"
        username: "{{ k8s_user }}"
        password: "{{ k8s_pass }}"
        validate_certs: "{{ validate_certs }}"
        api_version: project.openshift.io/v1
        kind: Project
      register: projects

    # --- Node architecture report (name -> arch) ---
    - name: Init node_arch_table
      ansible.builtin.set_fact:
        node_arch_table: []
    - name: Collect node architectures
      ansible.builtin.set_fact:
        node_arch_table: >-
          {{ node_arch_table + [ {
              'name': item.metadata.name,
              'arch': (
                item.status.nodeInfo.architecture
                | default(item.metadata.labels['kubernetes.io/arch']
                | default(item.metadata.labels['beta.kubernetes.io/arch']
                | default('unknown')))
              )
            } ] }}
      loop: "{{ nodes.resources | default([]) }}"

    - name: Compute architecture counts
      ansible.builtin.set_fact:
        arch_counts: {}
    - name: Increment counts per arch
      ansible.builtin.set_fact:
        arch_counts: "{{ arch_counts | combine({ item.arch: (arch_counts.get(item.arch, 0) + 1) }) }}"
      loop: "{{ node_arch_table }}"

    # --- Optional: write artifacts only when requested ---
    - name: Save gathered JSON artifacts (optional)
      when: save_artifacts | bool
      ansible.builtin.copy:
        dest: "./{{ item.name }}.json"
        content: "{{ item.content | to_nice_json }}"
      loop:
        - { name: "clusterversion",     content: "{{ ocp_cv }}" }
        - { name: "infrastructure",     content: "{{ infra }}" }
        - { name: "clusteroperators",   content: "{{ operators }}" }
        - { name: "nodes",              content: "{{ nodes }}" }
        - { name: "projects",           content: "{{ projects }}" }

    # --- Summary to job log ---
    - name: Summary
      vars:
        ocp_version: >-
          {{ ocp_cv.resources[0].status.desired.version
             if (ocp_cv.resources|length>0 and ocp_cv.resources[0].status is defined and
                 ocp_cv.resources[0].status.desired is defined)
             else 'unknown' }}
        platform: >-
          {{ infra.resources[0].status.platformStatus.type
             if (infra.resources|length>0 and infra.resources[0].status is defined and
                 infra.resources[0].status.platformStatus is defined)
             else 'unknown' }}
        node_count: "{{ (nodes.resources | default([])) | length }}"
        project_count: "{{ (projects.resources | default([])) | length }}"
        operators_available: >-
          {{
            operators.resources
            | map(attribute='status.conditions')
            | select('defined')
            | map('selectattr', 'type', 'equalto', 'Available')
            | map('selectattr', 'status', 'equalto', 'True')
            | list
            | length
          }}
      ansible.builtin.debug:
        msg:
          openshift_version: "{{ ocp_version }}"
          # platform: "{{ platform }}"
          nodes: "{{ node_count }}"
          node_arch_summary: "{{ arch_counts }}"
          projects: "{{ project_count }}"
          operators_available: "{{ operators_available }}"
          # (optional) include each node's arch:
          # nodes_by_arch: "{{ node_arch_table }}"
