---
- name: Gather OpenShift cluster information
  hosts: localhost
  gather_facts: false

  vars:
    k8s_auth_kwargs:
      kubeconfig: "{{ k8s_kubeconfig }}"
      context: "{{ k8s_context | default(omit) }}"

  tasks:
    - name: Ensure kubernetes.core collection is available
      ansible.builtin.meta: require_collection
      collections:
        - kubernetes.core

    - name: Show cluster API endpoint from oc whoami --show-server
      ansible.builtin.command: oc whoami --show-server
      register: whoami_server
      changed_when: false

    - name: Print API endpoint detected by oc
      ansible.builtin.debug:
        msg: "oc whoami --show-server => {{ whoami_server.stdout }}"

    - name: Verify current oc context matches expected API endpoint
      ansible.builtin.assert:
        that:
          - whoami_server.stdout == k8s_api_url
        success_msg: "Connected to expected API server {{ k8s_api_url }}"
        fail_msg: "Current oc context points to {{ whoami_server.stdout }}, not {{ k8s_api_url }}"

    - name: Gather cluster API resources (k8s_cluster_info)
      kubernetes.core.k8s_cluster_info:
        kubeconfig: "{{ k8s_kubeconfig }}"
        context: "{{ k8s_context | default(omit) }}"
      register: cluster_info

    - name: Save cluster API resources to a local file
      ansible.builtin.copy:
        dest: "./cluster_api_resources.json"
        content: "{{ cluster_info | to_nice_json }}"

    - name: Show a quick summary from k8s_cluster_info
      ansible.builtin.debug:
        msg:
          total_api_groups: "{{ (cluster_info.api_groups | default([])) | length }}"
          # Some environments expose 'resources' directly; guard with default
          total_api_resources: "{{ (cluster_info.resources | default([])) | length }}"

    # - name: Get OpenShift ClusterVersion
    #   kubernetes.core.k8s_info:
    #     api_version: config.openshift.io/v1
    #     kind: ClusterVersion
    #     name: version
    #     kubeconfig: "{{ k8s_kubeconfig }}"
    #     context: "{{ k8s_context | default(omit) }}"
    #   register: ocp_cv

    # - name: Print OpenShift version
    #   ansible.builtin.debug:
    #     msg: "OpenShift version: {{ ocp_cv.resources[0].status.desired.version }} (channel: {{ ocp_cv.resources[0].spec.channel }})"
    #   when: (ocp_cv.resources | default([])) | length > 0
